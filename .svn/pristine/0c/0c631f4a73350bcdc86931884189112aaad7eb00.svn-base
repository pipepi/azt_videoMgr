/**
 * 
 */
package com.aepan.sysmgr.web.controller;

import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.ui.ModelMap;

import com._21cn.framework.web.HttpRequestInfo;
import com.aepan.sysmgr.model.User;
import com.aepan.sysmgr.util.Constants;

/**
 * 数据table基类
 * @author rakika
 * 2015年6月21日下午7:42:35
 */
public class DataTableController {
	
	protected Logger log = LoggerFactory.getLogger(DataTableController.class);
	
	protected boolean isLogin(HttpServletRequest req){
		HttpSession session = req.getSession();
		Object user = session.getAttribute(Constants.SESSION_USER);
		log.info("isLoginsessionId:"+session.getId()+",user:"+user);
		if(user!=null){
			return true;
		}
		return false;
	}
	/**是否是管理员登录*/
	protected boolean isAdminLogin(HttpServletRequest req){
		HttpSession session = req.getSession();
		User user = (User)session.getAttribute(Constants.SESSION_ADMIN_USER);
		log.info("isLoginsessionId:"+session.getId()+",user:"+user);
		if(user!=null){
			if(user.getPartnerId()==2){
				return true;
			}else{
				log.info("isAdminLogin false , partnerId ="+user.getPartnerId()+",user:"+user);
				return false;
			}
		}
		return false;
	}
	
	/**
	 * 设置分页排序信息排序信息
	 * @param request
	 * @param model
	 * @param cols
	 */
	public void setPageSortModel(HttpServletRequest request, ModelMap model, String[] cols){
		setRequestModelMap(request, model);
		
		HttpRequestInfo reqInfo = new HttpRequestInfo(request);
		//分页信息
		int iDisplayLength = reqInfo.getIntParameter("iDisplayLength", Constants.PAGE_SIZE);
    	int iDisplayStart = reqInfo.getIntParameter("iDisplayStart", 0);
    	int pageNo = iDisplayStart / iDisplayLength + 1;
    	model.addAttribute("pageNo", pageNo);
    	model.addAttribute("pageSize", iDisplayLength);
    	model.addAttribute("iDisplayStart", iDisplayStart);
    	model.addAttribute("iDisplayLength", iDisplayLength);
    	
    	
    	//排序信息
		int sortCol = reqInfo.getIntParameter("iSortCol_0", 0);
		String sortOrder = reqInfo.getParameter("sSortDir_0", "desc");
		model.addAttribute("sortOrder", sortOrder);
		model.addAttribute("sortName", cols[sortCol]);
	}
	
	/**
	 * 设置请求头MAP
	 * @param request
	 * @param model
	 * @param query
	 * @param jsonEncoding
	 */
	public static void setRequestModelMap(HttpServletRequest request, ModelMap model)
	{
		Map<String, String[]> map = request.getParameterMap();  
        Set<Entry<String, String[]>> set = map.entrySet();  
        Iterator<Entry<String, String[]>> it = set.iterator();  
        while (it.hasNext()) {  
            Entry<String, String[]> entry = it.next();
//            System.out.println("KEY:" + entry.getKey());
            for (String i : entry.getValue()) {
            	if(entry.getKey().equals("sEcho") || entry.getKey().equals("inIdList")
            			|| entry.getKey().equals("inIds") || entry.getKey().equals("eqId")){
                    model.addAttribute(entry.getKey(), i);
            	}
            	if(entry.getKey().equals("eqUsername") || entry.getKey().equals("eqEmail")){
            		model.addAttribute(entry.getKey(), i);
            	}
            	if(entry.getKey().equals("orderId") || entry.getKey().equals("buyer")
                        || entry.getKey().equals("seller") || entry.getKey().equals("stype")){
            		model.addAttribute(entry.getKey(), i);
            	}
//                System.out.println("VALUE:" + i);  
            }  
        }  
	}
}
