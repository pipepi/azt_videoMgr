/**
 * 
 */
package com.aepan.sysmgr.dao.implement;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com._21cn.framework.util.PageList;
import com._21cn.framework.util.PageTurn;
import com.aepan.sysmgr.dao.StoreDao;
import com.aepan.sysmgr.dao.rowmapper.StoreRowMapper;
import com.aepan.sysmgr.model.Store;

/**
 * @author rakika
 * 2015年8月10日下午4:47:53
 */
@Repository
public class StoreDaoImpl implements StoreDao {
	
	@Autowired
    private JdbcTemplate jdbcTemplate;

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#getList(java.util.Map, int, int)
	 */
	@Override
	public PageList<Store> getList(Map<String, Object> params, int pageNo,
			int pageSize) {
		StringBuffer sb = new StringBuffer();
		sb.append(" select id, name, description, share_content, inner_code, type, ");
		sb.append(" private_dns, com_address, com_tele, user_id, logo_url, status, create_time ");
		sb.append(" from t_sysmgr_store where user_id = ? ");
		
		//params sortName
		if(params.get("sortName") != null){
			sb.append(" order by " + params.get("sortName"));
			sb.append(" " + params.get("sortOrder"));
		}
		List<Store> list = jdbcTemplate.query(sb.toString(), new Object[]{params.get("userId")},
				new StoreRowMapper());
		PageList<Store> pageList = new PageList<Store>();
		PageTurn pageTurn = new PageTurn(pageNo, pageSize,
				params.get("iDisplayStart") == null ? 1 :
				Integer.parseInt(params.get("iDisplayStart").toString()));
		for(int i = 0; i < list.size(); i++){
		    pageList.add(list.get(i));	
		}
		pageList.setPageTurn(pageTurn);
		return pageList;
	}

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#getById(int)
	 */
	@Override
	public Store getById(int id) {
		
		String sql = "  select id, name, description, share_content, inner_code, "
				+ " type, private_dns, com_address, com_tele, user_id, logo_url, "
				+ " status, create_time from t_sysmgr_store where id = ? ";
		return jdbcTemplate.queryForObject(sql, new Object[] {id}, new StoreRowMapper());
		
	}

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#updateStatus(int)
	 */
	@Override
	public boolean updateStatus(int id, int status) {
		StringBuffer sb = new StringBuffer();
		sb.append(" update t_sysmgr_store set status = ? where id = ? ");
		int ret = jdbcTemplate.update(sb.toString(), new Object[]{
			status,
			id
		});
		return ret > 0;
	}

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#getOnlineListByUserId(int)
	 */
	@Override
	public List<Store> getOnlineListByUserId(int userId) {
		StringBuffer sb = new StringBuffer();
		sb.append(" select id, name, description, share_content, inner_code, type, ");
		sb.append(" private_dns, com_address, com_tele, user_id, logo_url, status, create_time ");
		sb.append(" from t_sysmgr_store where user_id = ? and status = 1 order by update_time desc ");
		
		List<Store> list = jdbcTemplate.query(sb.toString(), new Object[]{userId},
				new StoreRowMapper());
		return list;
	}

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#getListByUserId(int)
	 */
	@Override
	public List<Store> getListByUserId(int userId) {
		StringBuffer sb = new StringBuffer();
		sb.append(" select id, name, description, share_content, inner_code, type, ");
		sb.append(" private_dns, com_address, com_tele, user_id, logo_url, status, create_time ");
		sb.append(" from t_sysmgr_store where user_id = ? order by update_time desc ");
		
		List<Store> list = jdbcTemplate.query(sb.toString(), new Object[]{userId},
				new StoreRowMapper());
		return list;
	}

	/* (non-Javadoc)
	 * @see com._aepan.sysmgr.dao.StoreDao#save(com._aepan.sysmgr.model.Store)
	 */
	@Override
	public boolean save(Store store) {
		StringBuffer sb = new StringBuffer();
		sb.append(" insert into t_sysmgr_store(name, description, share_content, inner_code, ");
        sb.append(" type, private_dns, com_address, com_tele, user_id, logo_url) ");
        sb.append(" value(?, ? ,?, ?, ?, ?, ?, ?, ?, ?) ");
		int ret = jdbcTemplate.update(sb.toString(), new Object[]{
			store.getName(),
			store.getDescription(),
			store.getShareContent(),
			store.getInnerCode(),
			store.getType(),
			store.getPrivateDns(),
			store.getComAddress(),
			store.getComTele(),
			store.getUserId(),
			store.getLogoUrl()
		});
		return ret > 0;
	}
	@Override
	public void update(Store store){
		StringBuffer sb = new StringBuffer();
		sb.append(" update t_sysmgr_store set name=?, description=?, share_content=?, inner_code=?, ");
        sb.append(" type=?, private_dns=?, com_address=?, com_tele=?, update_time = now() where id = ? ");
		jdbcTemplate.update(sb.toString(), new Object[]{
			store.getName(),
			store.getDescription(),
			store.getShareContent(),
			store.getInnerCode(),
			store.getType(),
			store.getPrivateDns(),
			store.getComAddress(),
			store.getComTele(),
			store.getId()
		});
	}
	@Override
	public void delete(int storeId){
		String sql = "delete from t_sysmgr_store where id = ? ";
		jdbcTemplate.update(sql, storeId);
	}
}
